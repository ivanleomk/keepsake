{"ast":null,"code":"import _defineProperty from \"/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/src/components/ImageWrapper.js\";\nimport React from \"react\";\nimport { Image, Transformer } from \"react-konva\";\nimport useImage from \"use-image\";\nimport smiley from \"./smiley.png\";\n\nvar ImageWrapper = function ImageWrapper(_ref) {\n  var _React$createElement;\n\n  var item = _ref.item,\n      selectShape = _ref.selectShape,\n      selected = _ref.selected,\n      dispatch = _ref.dispatch,\n      itemIndex = _ref.itemIndex;\n  var image = item.image,\n      x = item.x,\n      y = item.y,\n      width = item.width,\n      height = item.height;\n\n  var _useImage = useImage(image),\n      _useImage2 = _slicedToArray(_useImage, 1),\n      imageSrc = _useImage2[0];\n\n  var shapeRef = React.useRef();\n  var trRef = React.useRef();\n  React.useEffect(function () {\n    if (selected) {\n      trRef.current.setNode(shapeRef.current);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [selected]);\n  return React.createElement(React.Fragment, null, React.createElement(Image, (_React$createElement = {\n    image: imageSrc,\n    onClick: function onClick() {\n      return selectShape(item.id);\n    },\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    onDragEnd: function onDragEnd(e) {\n      console.log(e.target.x());\n      console.log(e.target.y());\n      dispatch({\n        type: \"UPDATE_IMAGE_POSITION\",\n        payload: {\n          x: e.target.x(),\n          y: e.target.y(),\n          itemIndex: itemIndex\n        }\n      });\n    },\n    onTransformEnd: function onTransformEnd(e) {\n      dispatch({\n        type: \"UPDATE_IMAGE_DIMENSIONS\",\n        payload: {\n          height: e.target.height(),\n          width: e.target.width(),\n          itemIndex: itemIndex\n        }\n      });\n    },\n    ref: shapeRef\n  }, _defineProperty(_React$createElement, \"width\", width), _defineProperty(_React$createElement, \"height\", height), _defineProperty(_React$createElement, \"draggable\", true), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), selected && React.createElement(Transformer, {\n    ref: trRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n};\n\nexport default ImageWrapper;","map":{"version":3,"sources":["/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/src/components/ImageWrapper.js"],"names":["React","Image","Transformer","useImage","smiley","ImageWrapper","item","selectShape","selected","dispatch","itemIndex","image","x","y","width","height","imageSrc","shapeRef","useRef","trRef","useEffect","current","setNode","getLayer","batchDraw","id","e","console","log","target","type","payload"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Image, Transformer } from \"react-konva\";\nimport useImage from \"use-image\";\nimport smiley from \"./smiley.png\";\n\nconst ImageWrapper = ({ item, selectShape, selected, dispatch, itemIndex }) => {\n  const { image, x, y, width, height } = item;\n  const [imageSrc] = useImage(image);\n\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n\n  React.useEffect(() => {\n    if (selected) {\n      trRef.current.setNode(shapeRef.current);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [selected]);\n\n  return (\n    <>\n      <Image\n        image={imageSrc}\n        onClick={() => selectShape(item.id)}\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        onDragEnd={(e) => {\n          console.log(e.target.x());\n          console.log(e.target.y());\n          dispatch({\n            type: \"UPDATE_IMAGE_POSITION\",\n            payload: { x: e.target.x(), y: e.target.y(), itemIndex }\n          });\n        }}\n        onTransformEnd={(e) => {\n          dispatch({\n            type: \"UPDATE_IMAGE_DIMENSIONS\",\n            payload: {\n              height: e.target.height(),\n              width: e.target.width(),\n              itemIndex\n            }\n          });\n        }}\n        ref={shapeRef}\n        width={width}\n        height={height}\n        draggable\n      />\n      {selected && <Transformer ref={trRef} />}\n    </>\n  );\n};\n\nexport default ImageWrapper;\n"]},"metadata":{},"sourceType":"module"}