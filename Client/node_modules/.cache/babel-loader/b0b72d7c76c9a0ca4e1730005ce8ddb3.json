{"ast":null,"code":"import _slicedToArray from \"/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/src/components/Toolbar.js\";\nimport React from 'react'; //Static Resources\n\nimport smiley from \"../assets/smiley.png\";\nimport groot from \"../assets/groot.svg\";\nimport goodVibes from \"../assets/goodVibes.svg\";\nimport cuteCat from \"../assets/cuteCat.svg\";\nimport bears from '../assets/barebears.png';\nimport alien from '../assets/alien.png'; //Icon Imports\n\nimport Image from \"../assets/icons/image.svg\";\nimport Text from \"../assets/icons/text.svg\"; //Defined Action Types\n\nimport { LINE_SELECTION, TEXT_SELECTION, IMAGE_SELECTION } from '../actionTypes'; //Helper Methods\n\nimport { addImage } from '../helperMethods';\n\nvar Toolbar = function Toolbar(_ref) {\n  var dispatch = _ref.dispatch,\n      selectShape = _ref.selectShape;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentScreen = _React$useState2[0],\n      setCurrentScreen = _React$useState2[1];\n\n  return React.createElement(\"div\", {\n    className: \"py-4 bg-red-400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      width: \"10vw\",\n      maxWidth: \"40px\"\n    },\n    src: Image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    style: {\n      width: \"10vw\",\n      maxWidth: \"40px\"\n    },\n    src: Text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nexport default Toolbar;","map":{"version":3,"sources":["/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/src/components/Toolbar.js"],"names":["React","smiley","bears","alien","LINE_SELECTION","TEXT_SELECTION","IMAGE_SELECTION","addImage","Toolbar","dispatch","selectShape","useState","currentScreen","setCurrentScreen","width","maxWidth","Image","Text"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;;AAIA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CAEA;;;6CAIA;;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,eAAzC,QAAgE,gBAAhE,C,CAEA;;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA+B;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,wBACFV,KAAK,CAACW,QAAN,CAAe,IAAf,CADE;AAAA;AAAA,MACpCC,aADoC;AAAA,MACtBC,gBADsB;;AAG3C,SACI;AAAK,IAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC,MAAP;AAAcC,MAAAA,QAAQ,EAAC;AAAvB,KAAZ;AAA4C,IAAA,GAAG,EAAEC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,KAAK,EAAE;AAACF,MAAAA,KAAK,EAAC,MAAP;AAAcC,MAAAA,QAAQ,EAAC;AAAvB,KAAZ;AAA4C,IAAA,GAAG,EAAEE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAQH,CAXD;;AAaA,eAAeT,OAAf","sourcesContent":["import React from 'react'\n\n//Static Resources\nimport smiley from \"../assets/smiley.png\";\nimport groot from '../assets/groot.svg'\nimport goodVibes from '../assets/goodVibes.svg'\nimport cuteCat from '../assets/cuteCat.svg'\nimport bears from '../assets/barebears.png'\nimport alien from '../assets/alien.png'\n\n//Icon Imports\nimport Image from '../assets/icons/image.svg';\nimport Text from '../assets/icons/text.svg';\n\n//Defined Action Types\nimport { LINE_SELECTION, TEXT_SELECTION, IMAGE_SELECTION } from '../actionTypes';\n\n//Helper Methods\nimport { addImage } from '../helperMethods';\n\n\nconst Toolbar = ({ dispatch, selectShape }) => {\n    const [currentScreen,setCurrentScreen] = React.useState(null)\n\n    return (\n        <div className = \"py-4 bg-red-400\" >\n            <img style={{width:\"10vw\",maxWidth:\"40px\"}} src={Image} />\n            <img style={{width:\"10vw\",maxWidth:\"40px\"}} src={Text} />\n            \n        </div>\n        \n    )\n}\n\nexport default Toolbar\n"]},"metadata":{},"sourceType":"module"}