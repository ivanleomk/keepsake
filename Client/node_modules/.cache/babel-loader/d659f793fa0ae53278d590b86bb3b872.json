{"ast":null,"code":"import _slicedToArray from \"/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/src/components/Letter.js\";\n//Library Imports\nimport React, { useReducer, useState, useRef } from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Image } from \"react-konva\";\nimport { v4 as uuidv4 } from \"uuid\"; //Component Imports\n\nimport ImageWrapper from \"./ImageWrapper\"; //Reducer Imports\n\nimport { ADD_IMAGE } from '../actionTypes';\nimport { reducer } from \"../reducers/letterReducer\"; //Static Resources\n\nimport smiley from \"../assets/smiley.png\";\nimport groot from \"../assets/groot.svg\";\nimport goodVibes from \"../assets/goodVibes.svg\";\nimport cuteCat from \"../assets/cuteCat.svg\";\nimport bears from '../assets/barebears.png';\nimport alien from '../assets/alien.png';\n\nvar Letter = function Letter() {\n  var _useReducer = useReducer(reducer, []),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      items = _useReducer2[0],\n      dispatch = _useReducer2[1]; //React Refs\n\n\n  var stageEl = React.createRef();\n  var layerEl = React.createRef();\n  var containerRef = React.createRef(); //Local State\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      selectShape = _useState2[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      editing = _React$useState2[0],\n      setEditing = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      height = _React$useState4[0],\n      setHeight = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      width = _React$useState6[0],\n      setWidth = _React$useState6[1];\n\n  var addImage = function addImage(image) {\n    var id = uuidv4();\n    dispatch({\n      type: ADD_IMAGE,\n      payload: {\n        image: image,\n        id: id,\n        width: 50,\n        height: 50,\n        x: 100,\n        y: 100\n      }\n    });\n    selectShape(id);\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      height: \"60vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return addImage(smiley);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Add Image\"), React.createElement(Stage, {\n    ref: stageEl,\n    className: \"border\",\n    onMouseDown: function onMouseDown(e) {\n      // deselect when clicked on empty area\n      var clickedOnEmpty = e.target === e.target.getStage();\n\n      if (clickedOnEmpty) {\n        selectShape(null);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Layer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, items.map(function (item, itemIndex) {\n    switch (item.type) {\n      case 'IMAGE':\n        {\n          return React.createElement(ImageWrapper, {\n            item: item,\n            key: itemIndex,\n            selectShape: selectShape,\n            selected: item.id === selectedId,\n            itemIndex: itemIndex,\n            dispatch: dispatch,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          });\n        }\n    }\n  }))));\n};\n\nexport default Letter;","map":{"version":3,"sources":["/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/src/components/Letter.js"],"names":["React","useReducer","useState","useRef","render","Stage","Layer","Rect","Image","v4","uuidv4","ImageWrapper","ADD_IMAGE","reducer","smiley","bears","alien","Letter","items","dispatch","stageEl","createRef","layerEl","containerRef","selectedId","selectShape","editing","setEditing","height","setHeight","width","setWidth","addImage","image","id","type","payload","x","y","e","clickedOnEmpty","target","getStage","map","item","itemIndex"],"mappings":"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","sourcesContent":["//Library Imports\nimport React, { useReducer, useState, useRef } from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Image } from \"react-konva\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n//Component Imports\nimport ImageWrapper from \"./ImageWrapper\";\n\n//Reducer Imports\nimport { ADD_IMAGE } from '../actionTypes';\nimport { reducer } from \"../reducers/letterReducer\";\n\n//Static Resources\nimport smiley from \"../assets/smiley.png\";\nimport groot from '../assets/groot.svg'\nimport goodVibes from '../assets/goodVibes.svg'\nimport cuteCat from '../assets/cuteCat.svg'\nimport bears from '../assets/barebears.png'\nimport alien from '../assets/alien.png'\n\nconst Letter = () => {\n  const [items, dispatch] = useReducer(reducer, []);\n  \n  //React Refs\n  const stageEl = React.createRef();\n  const layerEl = React.createRef();\n  const containerRef = React.createRef();\n  \n\n  //Local State\n  const [selectedId, selectShape] = useState(null);\n  const [editing, setEditing] = React.useState(false);\n  const [height, setHeight] = React.useState(null);\n  const [width,setWidth] = React.useState(null)\n\n  const addImage = (image) => {\n    const id = uuidv4();\n\n    dispatch({\n      type: ADD_IMAGE,\n      payload: { image, id, width: 50, height: 50, x: 100, y: 100 }\n    });\n    selectShape(id);\n  };\n\n  \n\n  return (\n    <div style = {{height:\"60vh\"}}>\n      <button onClick={() => addImage(smiley)}>Add Image</button>\n      <Stage\n        ref={stageEl}\n        \n        className=\"border\"\n        onMouseDown={(e) => {\n          // deselect when clicked on empty area\n          const clickedOnEmpty = e.target === e.target.getStage();\n          if (clickedOnEmpty) {\n            selectShape(null);\n          }\n        }}\n      >\n        <Layer>\n          {items.map((item, itemIndex) => {\n              switch (item.type) {\n                  case 'IMAGE': {\n                      return (\n                        <ImageWrapper\n                        item={item}\n                        key={itemIndex}\n                        selectShape={selectShape}\n                        selected={item.id === selectedId}\n                        itemIndex={itemIndex}\n                        dispatch={dispatch}\n                      />\n                      )\n                  }\n              }\n            \n          })}\n        </Layer>\n      </Stage>\n      </div>\n  );\n};\n\nexport default Letter;\n"]},"metadata":{},"sourceType":"module"}