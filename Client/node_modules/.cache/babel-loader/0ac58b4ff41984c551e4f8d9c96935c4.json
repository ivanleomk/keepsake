{"ast":null,"code":"import _objectSpread from \"/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { ADD_IMAGE, UPDATE_IMAGE_DIMENSIONS, UPDATE_IMAGE_POSITION, ADD_TEXT, UPDATE_TEXT_POSITION, UPDATE_TEXT_DIMENSIONS } from '../actionTypes';\nexport function reducer(state, action) {\n  switch (action.type) {\n    case ADD_IMAGE:\n      {\n        var _action$payload = action.payload,\n            image = _action$payload.image,\n            id = _action$payload.id,\n            width = _action$payload.width,\n            height = _action$payload.height,\n            x = _action$payload.x,\n            y = _action$payload.y;\n        return state.concat({\n          type: 'IMAGE',\n          image: image,\n          id: id,\n          width: width,\n          height: height,\n          x: x,\n          y: y\n        });\n      }\n\n    case ADD_TEXT:\n      {\n        var _action$payload2 = action.payload,\n            _id = _action$payload2.id,\n            _width = _action$payload2.width,\n            _height = _action$payload2.height,\n            _x = _action$payload2.x,\n            _y = _action$payload2.y;\n        return state.concat({\n          type: 'TEXT',\n          id: _id,\n          value: 'Click to edit text',\n          width: _width,\n          height: _height,\n          x: _x,\n          y: _y,\n          fontSize: 12\n        });\n      }\n\n    case UPDATE_TEXT_POSITION:\n      {\n        var _action$payload3 = action.payload,\n            _x2 = _action$payload3.x,\n            _y2 = _action$payload3.y,\n            itemIndex = _action$payload3.itemIndex;\n        return state.map(function (item, mapIndex) {\n          return itemIndex === mapIndex ? _objectSpread({}, item, {\n            x: _x2,\n            y: _y2\n          }) : _objectSpread({}, item);\n        });\n      }\n\n    case UPDATE_TEXT_DIMENSIONS:\n      {\n        var _action$payload4 = action.payload,\n            _height2 = _action$payload4.height,\n            _width2 = _action$payload4.width,\n            _itemIndex = _action$payload4.itemIndex;\n        var fontSize = 0.05 * _width2 + 0.14 * _height2 + 0.24 * Math.min(_height2, _width2);\n        return state.map(function (item, mapIndex) {\n          return _itemIndex === mapIndex ? _objectSpread({}, item, {\n            height: _height2,\n            width: _width2,\n            fontSize: fontSize\n          }) : _objectSpread({}, item);\n        });\n      }\n\n    case UPDATE_IMAGE_POSITION:\n      {\n        var _action$payload5 = action.payload,\n            _x3 = _action$payload5.x,\n            _y3 = _action$payload5.y,\n            _itemIndex2 = _action$payload5.itemIndex;\n        return state.map(function (item, mapIndex) {\n          return _itemIndex2 === mapIndex ? _objectSpread({}, item, {\n            x: _x3,\n            y: _y3\n          }) : _objectSpread({}, item);\n        });\n      }\n\n    case UPDATE_IMAGE_DIMENSIONS:\n      {\n        var _action$payload6 = action.payload,\n            _height3 = _action$payload6.height,\n            _width3 = _action$payload6.width,\n            _itemIndex3 = _action$payload6.itemIndex;\n        console.log(\"item index is \".concat(_itemIndex3));\n        console.log(_height3, _width3);\n        return state.map(function (item, mapIndex) {\n          return _itemIndex3 === mapIndex ? _objectSpread({}, item, {\n            height: _height3,\n            width: _width3\n          }) : _objectSpread({}, item);\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/src/reducers/letterReducer.js"],"names":["ADD_IMAGE","UPDATE_IMAGE_DIMENSIONS","UPDATE_IMAGE_POSITION","ADD_TEXT","UPDATE_TEXT_POSITION","UPDATE_TEXT_DIMENSIONS","reducer","state","action","type","payload","image","id","width","height","x","y","concat","value","fontSize","itemIndex","map","item","mapIndex","Math","min","console","log"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,uBAApB,EAA6CC,qBAA7C,EAAoEC,QAApE,EAA8EC,oBAA9E,EAAmGC,sBAAnG,QAAiI,gBAAjI;AAEA,OAAO,SAASC,OAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,SAAL;AAAgB;AAAA,8BAC6BQ,MAAM,CAACE,OADpC;AAAA,YACNC,KADM,mBACNA,KADM;AAAA,YACCC,EADD,mBACCA,EADD;AAAA,YACKC,KADL,mBACKA,KADL;AAAA,YACYC,MADZ,mBACYA,MADZ;AAAA,YACoBC,CADpB,mBACoBA,CADpB;AAAA,YACuBC,CADvB,mBACuBA,CADvB;AAEd,eAAOT,KAAK,CAACU,MAAN,CAAa;AAAER,UAAAA,IAAI,EAAE,OAAR;AAAiBE,UAAAA,KAAK,EAALA,KAAjB;AAAwBC,UAAAA,EAAE,EAAFA,EAAxB;AAA4BC,UAAAA,KAAK,EAALA,KAA5B;AAAmCC,UAAAA,MAAM,EAANA,MAAnC;AAA2CC,UAAAA,CAAC,EAADA,CAA3C;AAA8CC,UAAAA,CAAC,EAADA;AAA9C,SAAb,CAAP;AACD;;AAED,SAAKb,QAAL;AAAe;AAAA,+BACuBK,MAAM,CAACE,OAD9B;AAAA,YACLE,GADK,oBACLA,EADK;AAAA,YACDC,MADC,oBACDA,KADC;AAAA,YACMC,OADN,oBACMA,MADN;AAAA,YACcC,EADd,oBACcA,CADd;AAAA,YACiBC,EADjB,oBACiBA,CADjB;AAEb,eAAOT,KAAK,CAACU,MAAN,CAAa;AAAER,UAAAA,IAAI,EAAE,MAAR;AAAgBG,UAAAA,EAAE,EAAFA,GAAhB;AAAoBM,UAAAA,KAAK,EAAE,oBAA3B;AAAgDL,UAAAA,KAAK,EAALA,MAAhD;AAAuDC,UAAAA,MAAM,EAANA,OAAvD;AAA+DC,UAAAA,CAAC,EAADA,EAA/D;AAAkEC,UAAAA,CAAC,EAADA,EAAlE;AAAoEG,UAAAA,QAAQ,EAAC;AAA7E,SAAb,CAAP;AACD;;AAED,SAAKf,oBAAL;AAA2B;AAAA,+BACGI,MAAM,CAACE,OADV;AAAA,YACjBK,GADiB,oBACjBA,CADiB;AAAA,YACdC,GADc,oBACdA,CADc;AAAA,YACXI,SADW,oBACXA,SADW;AAGzB,eAAOb,KAAK,CAACc,GAAN,CAAU,UAACC,IAAD,EAAOC,QAAP;AAAA,iBACfH,SAAS,KAAKG,QAAd,qBAA8BD,IAA9B;AAAoCP,YAAAA,CAAC,EAADA,GAApC;AAAuCC,YAAAA,CAAC,EAADA;AAAvC,iCAAkDM,IAAlD,CADe;AAAA,SAAV,CAAP;AAGD;;AAED,SAAKjB,sBAAL;AAA6B;AAAA,+BACUG,MAAM,CAACE,OADjB;AAAA,YACnBI,QADmB,oBACnBA,MADmB;AAAA,YACXD,OADW,oBACXA,KADW;AAAA,YACJO,UADI,oBACJA,SADI;AAE3B,YAAMD,QAAQ,GAAG,OAAKN,OAAL,GAAa,OAAKC,QAAlB,GAA2B,OAAMU,IAAI,CAACC,GAAL,CAASX,QAAT,EAAgBD,OAAhB,CAAlD;AACA,eAAON,KAAK,CAACc,GAAN,CAAU,UAACC,IAAD,EAAOC,QAAP;AAAA,iBACfH,UAAS,KAAKG,QAAd,qBAA8BD,IAA9B;AAAoCR,YAAAA,MAAM,EAANA,QAApC;AAA4CD,YAAAA,KAAK,EAALA,OAA5C;AAAkDM,YAAAA,QAAQ,EAARA;AAAlD,iCAAoEG,IAApE,CADe;AAAA,SAAV,CAAP;AAGD;;AAED,SAAKpB,qBAAL;AAA4B;AAAA,+BACEM,MAAM,CAACE,OADT;AAAA,YAClBK,GADkB,oBAClBA,CADkB;AAAA,YACfC,GADe,oBACfA,CADe;AAAA,YACZI,WADY,oBACZA,SADY;AAG1B,eAAOb,KAAK,CAACc,GAAN,CAAU,UAACC,IAAD,EAAOC,QAAP;AAAA,iBACfH,WAAS,KAAKG,QAAd,qBAA8BD,IAA9B;AAAoCP,YAAAA,CAAC,EAADA,GAApC;AAAuCC,YAAAA,CAAC,EAADA;AAAvC,iCAAkDM,IAAlD,CADe;AAAA,SAAV,CAAP;AAGD;;AAED,SAAKrB,uBAAL;AAA8B;AAAA,+BACSO,MAAM,CAACE,OADhB;AAAA,YACpBI,QADoB,oBACpBA,MADoB;AAAA,YACZD,OADY,oBACZA,KADY;AAAA,YACLO,WADK,oBACLA,SADK;AAE5BM,QAAAA,OAAO,CAACC,GAAR,yBAA6BP,WAA7B;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ,EAAoBD,OAApB;AACA,eAAON,KAAK,CAACc,GAAN,CAAU,UAACC,IAAD,EAAOC,QAAP;AAAA,iBACfH,WAAS,KAAKG,QAAd,qBAA8BD,IAA9B;AAAoCR,YAAAA,MAAM,EAANA,QAApC;AAA4CD,YAAAA,KAAK,EAALA;AAA5C,iCAA2DS,IAA3D,CADe;AAAA,SAAV,CAAP;AAGD;;AAED;AACE,aAAOf,KAAP;AA7CJ;AA+CD","sourcesContent":["import { ADD_IMAGE, UPDATE_IMAGE_DIMENSIONS, UPDATE_IMAGE_POSITION, ADD_TEXT, UPDATE_TEXT_POSITION,UPDATE_TEXT_DIMENSIONS } from '../actionTypes'\n\nexport function reducer (state, action) {\n  switch (action.type) {\n    case ADD_IMAGE: {\n      const { image, id, width, height, x, y } = action.payload\n      return state.concat({ type: 'IMAGE', image, id, width, height, x, y })\n    }\n\n    case ADD_TEXT: {\n      const { id, width, height, x, y } = action.payload\n      return state.concat({ type: 'TEXT', id, value: 'Click to edit text',width, height, x, y,fontSize:12 })\n    }\n\n    case UPDATE_TEXT_POSITION: {\n      const { x, y, itemIndex } = action.payload\n\n      return state.map((item, mapIndex) =>\n        itemIndex === mapIndex ? { ...item, x, y } : { ...item }\n      )\n    }\n      \n    case UPDATE_TEXT_DIMENSIONS: {\n      const { height, width, itemIndex } = action.payload\n      const fontSize = 0.05*width + 0.14*height + 0.24*(Math.min(height,width))\n      return state.map((item, mapIndex) =>\n        itemIndex === mapIndex ? { ...item, height, width,fontSize } : { ...item }\n      )\n    }\n\n    case UPDATE_IMAGE_POSITION: {\n      const { x, y, itemIndex } = action.payload\n\n      return state.map((item, mapIndex) =>\n        itemIndex === mapIndex ? { ...item, x, y } : { ...item }\n      )\n    }\n\n    case UPDATE_IMAGE_DIMENSIONS: {\n      const { height, width, itemIndex } = action.payload\n      console.log(`item index is ${itemIndex}`)\n      console.log(height, width)\n      return state.map((item, mapIndex) =>\n        itemIndex === mapIndex ? { ...item, height, width } : { ...item }\n      )\n    }\n\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}