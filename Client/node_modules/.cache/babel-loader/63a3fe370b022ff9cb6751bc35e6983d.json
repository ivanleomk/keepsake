{"ast":null,"code":"import _slicedToArray from \"/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/src/components/Toolbar.js\";\nimport React from 'react'; //Static Resources\n\nimport smiley from \"../assets/smiley.png\";\nimport groot from \"../assets/groot.svg\";\nimport goodVibes from \"../assets/goodVibes.svg\";\nimport cuteCat from \"../assets/cuteCat.svg\";\nimport bears from '../assets/barebears.png';\nimport alien from '../assets/alien.png'; //Icon Imports\n\nimport Image from \"../assets/icons/image.svg\";\nimport Text from \"../assets/icons/text.svg\";\nimport Brush from \"../assets/icons/brush.svg\"; //Defined Action Types\n\nimport { LINE_SELECTION, TEXT_SELECTION, IMAGE_SELECTION } from '../actionTypes'; //Helper Methods\n\nimport { addImage } from '../helperMethods';\n\nvar Toolbar = function Toolbar(_ref) {\n  var dispatch = _ref.dispatch,\n      selectShape = _ref.selectShape;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentScreen = _React$useState2[0],\n      setCurrentScreen = _React$useState2[1];\n\n  return React.createElement(\"div\", {\n    className: \"flex flex-col items-center justify-center bg-red-400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex flex-row justify-between py-4\",\n    style: {\n      width: \"40vw\",\n      maxWidth: \"400px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    onClick: function onClick() {\n      return setCurrentScreen(IMAGE_SELECTION);\n    },\n    style: {\n      width: \"10vw\",\n      maxWidth: \"40px\"\n    },\n    src: Image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    onClick: function onClick() {\n      return setCurrentScreen(TEXT_SELECTION);\n    },\n    style: {\n      width: \"10vw\",\n      maxWidth: \"40px\"\n    },\n    src: Text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    onClick: function onClick() {\n      return setCurrentScreen(LINE_SELECTION);\n    },\n    style: {\n      width: \"10vw\",\n      maxWidth: \"40px\"\n    },\n    src: Brush,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), currentScreen === IMAGE_SELECTION ? React.createElement(\"div\", {\n    className: \"flex-row items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      width: \"10vw\",\n      maxWidth: \"60px\"\n    },\n    src: smiley,\n    onClick: function onClick() {\n      return addImage(smiley, dispatch, selectShape);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    style: {\n      width: \"10vw\",\n      maxWidth: \"60px\"\n    },\n    src: groot,\n    onClick: function onClick() {\n      return addImage(groot, dispatch, selectShape);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    style: {\n      width: \"10vw\",\n      maxWidth: \"60px\"\n    },\n    src: smiley,\n    onClick: function onClick() {\n      return addImage(smiley, dispatch, selectShape);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })) : null);\n};\n\nexport default Toolbar;","map":{"version":3,"sources":["/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/src/components/Toolbar.js"],"names":["React","smiley","bears","alien","LINE_SELECTION","TEXT_SELECTION","IMAGE_SELECTION","addImage","Toolbar","dispatch","selectShape","useState","currentScreen","setCurrentScreen","width","maxWidth","Image","Text","Brush","groot"],"mappings":"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","sourcesContent":["import React from 'react'\n\n//Static Resources\nimport smiley from \"../assets/smiley.png\";\nimport groot from '../assets/groot.svg'\nimport goodVibes from '../assets/goodVibes.svg'\nimport cuteCat from '../assets/cuteCat.svg'\nimport bears from '../assets/barebears.png'\nimport alien from '../assets/alien.png'\n\n//Icon Imports\nimport Image from '../assets/icons/image.svg';\nimport Text from '../assets/icons/text.svg';\nimport Brush from '../assets/icons/brush.svg'\n\n//Defined Action Types\nimport { LINE_SELECTION, TEXT_SELECTION, IMAGE_SELECTION } from '../actionTypes';\n\n//Helper Methods\nimport { addImage } from '../helperMethods';\n\n\nconst Toolbar = ({ dispatch, selectShape }) => {\n    const [currentScreen,setCurrentScreen] = React.useState(null)\n\n    return (\n        <div className = \"flex flex-col items-center justify-center bg-red-400\">\n            <div className = \"flex flex-row justify-between py-4\" style = {{width:\"40vw\",maxWidth:\"400px\"}} >\n                <img onClick={() => setCurrentScreen(IMAGE_SELECTION)} style={{ width: \"10vw\", maxWidth: \"40px\" }} src={Image} />\n                <img onClick={() => setCurrentScreen(TEXT_SELECTION)} style={{ width: \"10vw\", maxWidth: \"40px\" }} src={Text} />\n                <img onClick={() => setCurrentScreen(LINE_SELECTION)} style={{ width: \"10vw\", maxWidth: \"40px\" }} src={Brush} />\n            </div>\n            {currentScreen === IMAGE_SELECTION ?\n                <div className = \"flex-row items-center\">\n                    <img style={{ width: \"10vw\", maxWidth: \"60px\" }} src={smiley} onClick={() => addImage(smiley, dispatch, selectShape)} />\n                    <img style={{ width: \"10vw\", maxWidth: \"60px\" }} src={groot} onClick={()=>addImage(groot,dispatch,selectShape)}/>\n                    <img style={{ width: \"10vw\", maxWidth: \"60px\" }} src={smiley} onClick={()=>addImage(smiley,dispatch,selectShape)}/>\n                    \n                    \n                </div>\n            : null}\n        </div>\n        \n        \n    )\n}\n\nexport default Toolbar\n"]},"metadata":{},"sourceType":"module"}