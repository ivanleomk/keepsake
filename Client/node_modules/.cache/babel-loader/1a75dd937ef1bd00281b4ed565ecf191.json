{"ast":null,"code":"var _jsxFileName = \"/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/src/components/TextWrapper.js\";\nimport React from 'react';\nimport { Text, Transformer } from 'react-konva';\nimport { textfit } from 'textfit';\n\nvar TextWrapper = function TextWrapper(_ref) {\n  var item = _ref.item,\n      selectShape = _ref.selectShape,\n      selected = _ref.selected,\n      dispatch = _ref.dispatch,\n      itemIndex = _ref.itemIndex,\n      text = _ref.text;\n  // Item Properties\n  var image = item.image,\n      x = item.x,\n      y = item.y,\n      width = item.width,\n      height = item.height,\n      value = item.value;\n  var shapeRef = React.useRef();\n  var trRef = React.useRef();\n  React.useEffect(function () {\n    if (selected) {\n      // we need to attach transformer manually\n      trRef.current.setNode(shapeRef.current);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [selected]);\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    text: value,\n    ref: shapeRef,\n    onClick: function onClick() {\n      return selectShape(item.id);\n    },\n    onDragEnd: function onDragEnd(e) {\n      dispatch({\n        type: 'UPDATE_TEXT_POSITION',\n        payload: {\n          x: e.target.x(),\n          y: e.target.y(),\n          itemIndex: itemIndex\n        }\n      });\n    },\n    onTransformEnd: function onTransformEnd(e) {\n      var node = shapeRef.current;\n      var scaleX = node.scaleX();\n      var scaleY = node.scaleY();\n      node.scaleX(1);\n      node.scaleY(1);\n      console.log(e.target);\n      dispatch({\n        type: 'UPDATE_TEXT_DIMENSIONS',\n        payload: {\n          height: Math.max(node.height() * scaleY),\n          width: Math.max(5, node.width() * scaleX),\n          itemIndex: itemIndex\n        }\n      });\n    },\n    draggable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), selected && React.createElement(Transformer, {\n    ref: trRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n};\n\nexport default TextWrapper;","map":{"version":3,"sources":["/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/src/components/TextWrapper.js"],"names":["React","Text","Transformer","textfit","TextWrapper","item","selectShape","selected","dispatch","itemIndex","text","image","x","y","width","height","value","shapeRef","useRef","trRef","useEffect","current","setNode","getLayer","batchDraw","id","e","type","payload","target","node","scaleX","scaleY","console","log","Math","max"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Text, Transformer } from 'react-konva';\nimport {textfit} from 'textfit';\n\nconst TextWrapper = ({ item, selectShape, selected, dispatch, itemIndex, text }) => {\n  // Item Properties\n  const { image, x, y, width, height, value } = item\n  const shapeRef = React.useRef()\n  const trRef = React.useRef()\n\n  React.useEffect(() => {\n    if (selected) {\n      // we need to attach transformer manually\n      trRef.current.setNode(shapeRef.current)\n      trRef.current.getLayer().batchDraw()\n    }\n  }, [selected])\n\n  return (\n    <>\n      <Text\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        text={value}\n        ref={shapeRef}\n        onClick={() => selectShape(item.id)}\n        onDragEnd={(e) => {\n          dispatch({\n            type: 'UPDATE_TEXT_POSITION',\n            payload: { x: e.target.x(), y: e.target.y(), itemIndex }\n          })\n        }}\n        onTransformEnd={(e) => {\n          const node = shapeRef.current\n          const scaleX = node.scaleX()\n          const scaleY = node.scaleY()\n          node.scaleX(1)\n            node.scaleY(1)\n            console.log(e.target)\n          dispatch({\n            type: 'UPDATE_TEXT_DIMENSIONS',\n            payload: {\n              height: Math.max(node.height() * scaleY),\n              width: Math.max(5, node.width() * scaleX),\n              itemIndex\n            }\n          })\n        }}\n        draggable\n      />\n      {selected && <Transformer ref={trRef} />}\n    </>\n  )\n}\n\nexport default TextWrapper\n"]},"metadata":{},"sourceType":"module"}