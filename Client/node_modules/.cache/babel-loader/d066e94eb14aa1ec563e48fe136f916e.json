{"ast":null,"code":"import _slicedToArray from \"/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/src/components/Letter.js\";\nimport React, { useReducer, useState, useRef } from \"react\";\nimport Konva from \"konva\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Image } from \"react-konva\";\nimport { reducer } from \"../reducers/letterReducer\";\nimport smiley from \"../assets/smiley.png\";\nimport { v4 as uuidv4 } from \"uuid\"; //Import Components\n\nimport ImageWrapper from \"./ImageWrapper\";\nvar ADD_IMAGE = \"ADD_IMAGE\";\n\nvar Letter = function Letter() {\n  var _useReducer = useReducer(reducer, [{\n    \"type\": \"IMAGE\",\n    \"image\": \"/static/media/smiley.5ce9d575.png\",\n    \"id\": \"edcbcbcb-0622-45b6-ba12-1e1481f0646f\",\n    \"width\": 390.06063416281677,\n    \"height\": 390.0606341628169,\n    \"x\": 329.0000000000002,\n    \"y\": 205.00000000000009\n  }]),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      items = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var stageEl = React.createRef();\n  var layerEl = React.createRef();\n  console.log(items); //Process Images\n  //Local State\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      selectShape = _useState2[1];\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      updateState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      editing = _React$useState4[0],\n      setEditing = _React$useState4[1];\n\n  var addImage = function addImage(image) {\n    var id = uuidv4();\n    dispatch({\n      type: ADD_IMAGE,\n      payload: {\n        image: image,\n        id: id,\n        width: 50,\n        height: 50,\n        x: 100,\n        y: 100\n      }\n    });\n    selectShape(id);\n  };\n\n  console.log(selectedId);\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return addImage(smiley);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Add Image\"), React.createElement(Stage, {\n    width: 1000,\n    height: 1000,\n    ref: stageEl,\n    className: \"border\",\n    onMouseDown: function onMouseDown(e) {\n      // deselect when clicked on empty area\n      var clickedOnEmpty = e.target === e.target.getStage();\n\n      if (clickedOnEmpty) {\n        selectShape(null);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Layer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, items.map(function (item, itemIndex) {\n    switch (item.type) {\n      case 'IMAGE':\n        {\n          return React.createElement(ImageWrapper, {\n            item: item,\n            key: itemIndex,\n            selectShape: selectShape,\n            selected: item.id === selectedId,\n            itemIndex: itemIndex,\n            dispatch: dispatch,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          });\n        }\n    }\n  }))));\n};\n\nexport default Letter;","map":{"version":3,"sources":["/Users/ivanleo/Documents/coding/Client/keepsake/tailwindKeepsake/Client/src/components/Letter.js"],"names":["React","useReducer","useState","useRef","Konva","render","Stage","Layer","Rect","Image","reducer","smiley","v4","uuidv4","ImageWrapper","ADD_IMAGE","Letter","items","dispatch","stageEl","createRef","layerEl","console","log","selectedId","selectShape","updateState","editing","setEditing","addImage","image","id","type","payload","width","height","x","y","e","clickedOnEmpty","target","getStage","map","item","itemIndex"],"mappings":"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","sourcesContent":["import React, { useReducer, useState, useRef } from \"react\";\nimport Konva from \"konva\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Image } from \"react-konva\";\nimport { reducer } from \"../reducers/letterReducer\";\nimport smiley from \"../assets/smiley.png\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n\n//Import Components\nimport ImageWrapper from \"./ImageWrapper\";\n\nconst ADD_IMAGE = \"ADD_IMAGE\";\n\nconst Letter = () => {\n  const [items, dispatch] = useReducer(reducer, [\n    {\n      \"type\": \"IMAGE\",\n      \"image\": \"/static/media/smiley.5ce9d575.png\",\n      \"id\": \"edcbcbcb-0622-45b6-ba12-1e1481f0646f\",\n      \"width\": 390.06063416281677,\n      \"height\": 390.0606341628169,\n      \"x\": 329.0000000000002,\n      \"y\": 205.00000000000009\n    }\n  ]);\n  const stageEl = React.createRef();\n    const layerEl = React.createRef();\n    \n    console.log(items)\n\n  //Process Images\n\n  //Local State\n  const [selectedId, selectShape] = useState(null);\n  const [, updateState] = React.useState();\n  const [editing, setEditing] = React.useState(false);\n\n  const addImage = (image) => {\n    const id = uuidv4();\n\n    dispatch({\n      type: ADD_IMAGE,\n      payload: { image, id, width: 50, height: 50, x: 100, y: 100 }\n    });\n    selectShape(id);\n  };\n\n  console.log(selectedId);\n\n  return (\n    <>\n      <button onClick={() => addImage(smiley)}>Add Image</button>\n      <Stage\n        width={1000}\n        height={1000}\n        ref={stageEl}\n        className=\"border\"\n        onMouseDown={(e) => {\n          // deselect when clicked on empty area\n          const clickedOnEmpty = e.target === e.target.getStage();\n          if (clickedOnEmpty) {\n            selectShape(null);\n          }\n        }}\n      >\n        <Layer>\n          {items.map((item, itemIndex) => {\n              switch (item.type) {\n                  case 'IMAGE': {\n                      return (\n                        <ImageWrapper\n                        item={item}\n                        key={itemIndex}\n                        selectShape={selectShape}\n                        selected={item.id === selectedId}\n                        itemIndex={itemIndex}\n                        dispatch={dispatch}\n                      />\n                      )\n                  }\n              }\n            \n          })}\n        </Layer>\n      </Stage>\n    </>\n  );\n};\n\nexport default Letter;\n"]},"metadata":{},"sourceType":"module"}